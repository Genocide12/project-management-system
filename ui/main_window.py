# -*- coding: utf-8 -*-
"""
Main Window Module for Project Management System

–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏

Features:
- Tabbed interface with Dashboard, Projects, Tasks, Reports, Settings
- Modern navigation and menu system
- Integration with dashboard view
- Theme management and shortcuts
- Session management and user authentication

Author: Genocide12
Date: September 2025
"""

import sys
import logging
from datetime import datetime
from typing import Dict, Any, Optional

from PyQt6.QtWidgets import (
    QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QTabWidget, QMenuBar, QToolBar, QStatusBar,
    QAction, QSplitter, QStackedWidget, QFrame,
    QLabel, QPushButton, QMessageBox, QDialog,
    QApplication, QShortcut, QSystemTrayIcon,
    QMenu, QStyle, QProgressBar, QComboBox
)
from PyQt6.QtCore import (
    Qt, QTimer, QSize, pyqtSignal, QThread,
    QSettings, QStandardPaths, QDir
)
from PyQt6.QtGui import (
    QFont, QIcon, QPixmap, QAction as QGuiAction,
    QKeySequence, QPalette, QColor
)

# Import views and components
try:
    from .dashboard_view import DashboardView
except ImportError:
    # Fallback dashboard if not available yet
    class DashboardView(QWidget):
        project_create_requested = pyqtSignal()
        task_create_requested = pyqtSignal()
        report_generate_requested = pyqtSignal()
        
        def __init__(self, parent=None):
            super().__init__(parent)
            layout = QVBoxLayout(self)
            welcome_label = QLabel("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
            welcome_label.setStyleSheet("font-size: 16px; padding: 20px; color: #2c3e50; font-weight: bold;")
            layout.addWidget(welcome_label)
            
            # Add some dashboard-like content
            dashboard_label = QLabel("üìä Dashboard View - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
            dashboard_label.setStyleSheet("font-size: 14px; color: #7f8c8d; padding: 10px;")
            layout.addWidget(dashboard_label)
            
            # Add some quick action buttons
            actions_frame = QFrame()
            actions_layout = QHBoxLayout(actions_frame)
            
            project_btn = QPushButton("üìÅ –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç")
            task_btn = QPushButton("üìù –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞")
            report_btn = QPushButton("üìà –û—Ç—á–µ—Ç—ã")
            
            for btn in [project_btn, task_btn, report_btn]:
                btn.setStyleSheet("""
                    QPushButton {
                        background-color: #3498db;
                        color: white;
                        border: none;
                        padding: 10px 20px;
                        border-radius: 5px;
                        font-size: 12px;
                        margin: 5px;
                    }
                    QPushButton:hover {
                        background-color: #2980b9;
                    }
                """)
            
            project_btn.clicked.connect(self.project_create_requested.emit)
            task_btn.clicked.connect(self.task_create_requested.emit)
            report_btn.clicked.connect(self.report_generate_requested.emit)
            
            actions_layout.addWidget(project_btn)
            actions_layout.addWidget(task_btn)
            actions_layout.addWidget(report_btn)
            actions_layout.addStretch()
            
            layout.addWidget(actions_frame)
            layout.addStretch()


class NavigationBar(QFrame):
    """
    –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º
    """
    
    tab_changed = pyqtSignal(int)
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.current_tab = 0
        self.setup_ui()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        self.setFixedWidth(200)
        self.setFrameStyle(QFrame.Shape.StyledPanel)
        self.setStyleSheet("""
            QFrame {
                background-color: #34495e;
                border: none;
                border-right: 1px solid #2c3e50;
            }
        """)
        
        layout = QVBoxLayout(self)
        layout.setSpacing(5)
        layout.setContentsMargins(10, 20, 10, 20)
        
        # –õ–æ–≥–æ—Ç–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        logo_label = QLabel("PMS")
        logo_label.setStyleSheet("""
            QLabel {
                color: #3498db;
                font-size: 24px;
                font-weight: bold;
                padding: 10px;
                text-align: center;
            }
        """)
        logo_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(logo_label)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        separator = QFrame()
        separator.setFrameShape(QFrame.Shape.HLine)
        separator.setStyleSheet("color: #2c3e50;")
        layout.addWidget(separator)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_items = [
            ("üìä", "–ü–∞–Ω–µ–ª—å", "Dashboard"),
            ("üìÅ", "–ü—Ä–æ–µ–∫—Ç—ã", "Projects"),
            ("üìù", "–ó–∞–¥–∞—á–∏", "Tasks"),
            ("üìà", "–û—Ç—á–µ—Ç—ã", "Reports"),
            ("‚öôÔ∏è", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "Settings")
        ]
        
        self.nav_buttons = []
        for i, (icon, text, tooltip) in enumerate(nav_items):
            btn = self.create_nav_button(icon, text, tooltip, i)
            self.nav_buttons.append(btn)
            layout.addWidget(btn)
        
        layout.addStretch()
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if self.nav_buttons:
            self.nav_buttons[0].setChecked(True)
    
    def create_nav_button(self, icon: str, text: str, tooltip: str, index: int) -> QPushButton:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        btn = QPushButton(f"{icon}  {text}")
        btn.setCheckable(True)
        btn.setFixedHeight(45)
        btn.setToolTip(tooltip)
        btn.clicked.connect(lambda: self.select_tab(index))
        
        btn.setStyleSheet("""
            QPushButton {
                background-color: transparent;
                border: none;
                color: #ecf0f1;
                text-align: left;
                padding: 8px 15px;
                font-size: 14px;
                border-radius: 8px;
            }
            QPushButton:hover {
                background-color: #3d566e;
            }
            QPushButton:checked {
                background-color: #3498db;
                color: white;
                font-weight: bold;
            }
        """)
        
        return btn
    
    def select_tab(self, index: int):
        """–í—ã–±–æ—Ä –≤–∫–ª–∞–¥–∫–∏"""
        if index != self.current_tab:
            # –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∫–Ω–æ–ø–∫–∏
            if 0 <= self.current_tab < len(self.nav_buttons):
                self.nav_buttons[self.current_tab].setChecked(False)
            
            # –í—ã–¥–µ–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
            if 0 <= index < len(self.nav_buttons):
                self.nav_buttons[index].setChecked(True)
                self.current_tab = index
                self.tab_changed.emit(index)
    
    def set_current_tab(self, index: int):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏ –∏–∑–≤–Ω–µ"""
        self.select_tab(index)


class StatusBarWidget(QStatusBar):
    """
    –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    """
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_ui()
        self.setup_timer()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.main_label = QLabel("–ì–æ—Ç–æ–≤")
        self.addWidget(self.main_label)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        self.progress_bar.setMaximumWidth(200)
        self.addWidget(self.progress_bar)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        self.user_label = QLabel("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        self.addPermanentWidget(self.user_label)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.db_label = QLabel("–ë–î: SQLite")
        self.addPermanentWidget(self.db_label)
        
        # –í—Ä–µ–º—è
        self.time_label = QLabel()
        self.addPermanentWidget(self.time_label)
        
        self.setStyleSheet("""
            QStatusBar {
                background-color: #ecf0f1;
                border-top: 1px solid #bdc3c7;
                font-size: 11px;
            }
            QLabel {
                padding: 2px 8px;
                color: #2c3e50;
            }
        """)
    
    def setup_timer(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏"""
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_time)
        self.timer.start(1000)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        self.update_time()
    
    def update_time(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
        current_time = datetime.now().strftime("%H:%M:%S")
        self.time_label.setText(current_time)
    
    def show_message(self, message: str, timeout: int = 3000):
        """–ü–æ–∫–∞–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        self.main_label.setText(message)
        if timeout > 0:
            QTimer.singleShot(timeout, lambda: self.main_label.setText("–ì–æ—Ç–æ–≤"))


class MainWindow(QMainWindow):
    """
    –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Project Management System
    """
    
    def __init__(self, app=None):
        super().__init__()
        self.app = app
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.settings = QSettings("ProjectManagementSystem", "MainWindow")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        self.views = {}
        self.current_view_index = 0
        
        self.setup_ui()
        self.setup_menu()
        self.setup_toolbar()
        self.setup_shortcuts()
        self.setup_connections()
        
        self.restore_settings()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        self.setWindowTitle("Project Management System")
        self.setMinimumSize(1000, 700)
        self.resize(1400, 900)
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        main_layout = QHBoxLayout(central_widget)
        main_layout.setSpacing(0)
        main_layout.setContentsMargins(0, 0, 0, 0)
        
        # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.navigation_bar = NavigationBar()
        main_layout.addWidget(self.navigation_bar)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content_stack = QStackedWidget()
        main_layout.addWidget(self.content_stack)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
        self.create_views()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.status_bar = StatusBarWidget()
        self.setStatusBar(self.status_bar)
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.status_bar.show_message("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ")
    
    def create_views(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # Dashboard
        self.dashboard_view = DashboardView()
        self.views['dashboard'] = self.dashboard_view
        self.content_stack.addWidget(self.dashboard_view)
        
        # Projects (placeholder)
        self.project_view = self.create_placeholder_view("üìÅ Project View", "–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        self.views['projects'] = self.project_view
        self.content_stack.addWidget(self.project_view)
        
        # Tasks (placeholder)
        self.task_view = self.create_placeholder_view("üìù Task View", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –∏ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–æ–π - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        self.views['tasks'] = self.task_view
        self.content_stack.addWidget(self.task_view)
        
        # Reports (placeholder)
        self.report_view = self.create_placeholder_view("üìà Report View", "–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        self.views['reports'] = self.report_view
        self.content_stack.addWidget(self.report_view)
        
        # Settings (placeholder)
        self.settings_view = self.create_placeholder_view("‚öôÔ∏è Settings View", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        self.views['settings'] = self.settings_view
        self.content_stack.addWidget(self.settings_view)
    
    def create_placeholder_view(self, title: str, description: str) -> QWidget:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        layout.setSpacing(20)
        layout.setContentsMargins(40, 40, 40, 40)
        
        title_label = QLabel(title)
        title_label.setStyleSheet("""
            QLabel {
                font-size: 24px;
                font-weight: bold;
                color: #2c3e50;
                padding: 20px;
            }
        """)
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        
        desc_label = QLabel(description)
        desc_label.setStyleSheet("""
            QLabel {
                font-size: 14px;
                color: #7f8c8d;
                padding: 10px;
                text-align: center;
            }
        """)
        desc_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        desc_label.setWordWrap(True)
        
        layout.addStretch()
        layout.addWidget(title_label)
        layout.addWidget(desc_label)
        layout.addStretch()
        
        return widget
    
    def setup_menu(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        menubar = self.menuBar()
        
        # –§–∞–π–ª
        file_menu = menubar.addMenu("&–§–∞–π–ª")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        new_project_action = QAction("&–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", self)
        new_project_action.setShortcut(QKeySequence("Ctrl+Shift+N"))
        new_project_action.triggered.connect(self.create_project)
        file_menu.addAction(new_project_action)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        new_task_action = QAction("&–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞", self)
        new_task_action.setShortcut(QKeySequence("Ctrl+N"))
        new_task_action.triggered.connect(self.create_task)
        file_menu.addAction(new_task_action)
        
        file_menu.addSeparator()
        
        # –ò–º–ø–æ—Ä—Ç/–≠–∫—Å–ø–æ—Ä—Ç
        export_action = QAction("&–≠–∫—Å–ø–æ—Ä—Ç...", self)
        export_action.setShortcut(QKeySequence("Ctrl+E"))
        export_action.triggered.connect(self.export_data)
        file_menu.addAction(export_action)
        
        file_menu.addSeparator()
        
        # –í—ã—Ö–æ–¥
        exit_action = QAction("–í&—ã—Ö–æ–¥", self)
        exit_action.setShortcut(QKeySequence("Ctrl+Q"))
        exit_action.triggered.connect(self.close)
        file_menu.addAction(exit_action)
        
        # –í–∏–¥
        view_menu = menubar.addMenu("&–í–∏–¥")
        
        # –û–±–Ω–æ–≤–∏—Ç—å
        refresh_action = QAction("&–û–±–Ω–æ–≤–∏—Ç—å", self)
        refresh_action.setShortcut(QKeySequence("F5"))
        refresh_action.triggered.connect(self.refresh_current_view)
        view_menu.addAction(refresh_action)
        
        view_menu.addSeparator()
        
        # –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        fullscreen_action = QAction("&–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º", self)
        fullscreen_action.setShortcut(QKeySequence("F11"))
        fullscreen_action.setCheckable(True)
        fullscreen_action.triggered.connect(self.toggle_fullscreen)
        view_menu.addAction(fullscreen_action)
        
        # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        tools_menu = menubar.addMenu("&–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        settings_action = QAction("&–ù–∞—Å—Ç—Ä–æ–π–∫–∏", self)
        settings_action.setShortcut(QKeySequence("Ctrl+,"))
        settings_action.triggered.connect(lambda: self.switch_to_view(4))  # Settings view
        tools_menu.addAction(settings_action)
        
        # –°–ø—Ä–∞–≤–∫–∞
        help_menu = menubar.addMenu("&–°–ø—Ä–∞–≤–∫–∞")
        
        about_action = QAction("&–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", self)
        about_action.triggered.connect(self.show_about)
        help_menu.addAction(about_action)
    
    def setup_toolbar(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        toolbar = self.addToolBar("–ì–ª–∞–≤–Ω–∞—è")
        toolbar.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextBesideIcon)
        
        # –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
        new_project_action = QAction("üìÅ –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", self)
        new_project_action.triggered.connect(self.create_project)
        toolbar.addAction(new_project_action)
        
        # –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
        new_task_action = QAction("üìù –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞", self)
        new_task_action.triggered.connect(self.create_task)
        toolbar.addAction(new_task_action)
        
        toolbar.addSeparator()
        
        # –û–±–Ω–æ–≤–∏—Ç—å
        refresh_action = QAction("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", self)
        refresh_action.triggered.connect(self.refresh_current_view)
        toolbar.addAction(refresh_action)
        
        # –≠–∫—Å–ø–æ—Ä—Ç
        export_action = QAction("üìÑ –≠–∫—Å–ø–æ—Ä—Ç", self)
        export_action.triggered.connect(self.export_data)
        toolbar.addAction(export_action)
        
        toolbar.addSeparator()
        
        # –ö–æ–º–±–æ-–±–æ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
        toolbar.addWidget(QLabel("–ü—Ä–æ–µ–∫—Ç: "))
        self.project_combo = QComboBox()
        self.project_combo.setMinimumWidth(200)
        self.project_combo.addItem("–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã")
        toolbar.addWidget(self.project_combo)
    
    def setup_shortcuts(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à"""
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
        for i in range(5):  # 5 –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
            shortcut = QShortcut(QKeySequence(f"Ctrl+{i+1}"), self)
            shortcut.activated.connect(lambda idx=i: self.switch_to_view(idx))
    
    def setup_connections(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–æ–≤"""
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        self.navigation_bar.tab_changed.connect(self.switch_to_view)
        
        # Dashboard —Å–∏–≥–Ω–∞–ª—ã
        if hasattr(self.dashboard_view, 'project_create_requested'):
            self.dashboard_view.project_create_requested.connect(self.create_project)
        if hasattr(self.dashboard_view, 'task_create_requested'):
            self.dashboard_view.task_create_requested.connect(self.create_task)
        if hasattr(self.dashboard_view, 'report_generate_requested'):
            self.dashboard_view.report_generate_requested.connect(lambda: self.switch_to_view(3))
    
    def switch_to_view(self, index: int):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏"""
        if 0 <= index < self.content_stack.count():
            self.content_stack.setCurrentIndex(index)
            self.current_view_index = index
            self.navigation_bar.set_current_tab(index)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
            view_names = ["–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–ü—Ä–æ–µ–∫—Ç—ã", "–ó–∞–¥–∞—á–∏", "–û—Ç—á–µ—Ç—ã", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
            if index < len(view_names):
                self.setWindowTitle(f"Project Management System - {view_names[index]}")
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            self.status_bar.show_message(f"–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞: {view_names[index] if index < len(view_names) else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
    
    def refresh_current_view(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è"""
        current_widget = self.content_stack.currentWidget()
        
        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ refresh, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(current_widget, 'refresh_dashboard'):
            current_widget.refresh_dashboard()
        elif hasattr(current_widget, 'refresh'):
            current_widget.refresh()
        
        self.status_bar.show_message("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    def create_project(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        QMessageBox.information(self, "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", 
                              "–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.")
        self.status_bar.show_message("–ó–∞–ø—Ä–æ—à–µ–Ω –¥–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞")
    
    def create_task(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏"""
        QMessageBox.information(self, "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏", 
                              "–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.")
        self.status_bar.show_message("–ó–∞–ø—Ä–æ—à–µ–Ω –¥–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
    
    def export_data(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
        QMessageBox.information(self, "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", 
                              "–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.")
        self.status_bar.show_message("–ó–∞–ø—Ä–æ—à–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
    
    def toggle_fullscreen(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        if self.isFullScreen():
            self.showNormal()
            self.status_bar.show_message("–û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º")
        else:
            self.showFullScreen()
            self.status_bar.show_message("–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º")
    
    def show_about(self):
        """–ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        QMessageBox.about(self, "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", 
                         "Project Management System v1.0\n\n"
                         "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏\n"
                         "—Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º PyQt6\n\n"
                         "–ê–≤—Ç–æ—Ä: Genocide12\n"
                         "–î–∞—Ç–∞: –°–µ–Ω—Ç—è–±—Ä—å 2025\n\n"
                         "üîó GitHub: https://github.com/Genocide12/project-management-system")
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞"""
        self.settings.setValue("geometry", self.saveGeometry())
        self.settings.setValue("windowState", self.saveState())
        self.settings.setValue("currentView", self.current_view_index)
    
    def restore_settings(self):
        """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞"""
        geometry = self.settings.value("geometry")
        if geometry:
            self.restoreGeometry(geometry)
        
        window_state = self.settings.value("windowState")
        if window_state:
            self.restoreState(window_state)
        
        current_view = self.settings.value("currentView", 0, type=int)
        self.switch_to_view(current_view)
    
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.save_settings()
        self.status_bar.show_message("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
        event.accept()


if __name__ == "__main__":
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    app = QApplication(sys.argv)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setStyleSheet("""
        QApplication {
            font-family: 'Segoe UI', Arial, sans-serif;
            font-size: 9pt;
        }
        
        QMainWindow {
            background-color: #f8f9fa;
        }
        
        QMenuBar {
            background-color: #ffffff;
            border-bottom: 1px solid #dee2e6;
            padding: 2px;
        }
        
        QMenuBar::item {
            padding: 6px 12px;
            background-color: transparent;
            border-radius: 4px;
        }
        
        QMenuBar::item:selected {
            background-color: #e9ecef;
        }
        
        QToolBar {
            background-color: #ffffff;
            border-bottom: 1px solid #dee2e6;
            spacing: 6px;
            padding: 4px;
        }
        
        QToolBar QToolButton {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            background-color: transparent;
        }
        
        QToolBar QToolButton:hover {
            background-color: #e9ecef;
        }
        
        QToolBar::separator {
            background-color: #dee2e6;
            width: 1px;
            margin: 8px 4px;
        }
        
        QComboBox {
            padding: 4px 8px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            background-color: white;
        }
        
        QComboBox:focus {
            border-color: #3498db;
        }
    """)
    
    window = MainWindow()
    window.show()
    
    sys.exit(app.exec())